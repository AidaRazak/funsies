package com.exchange;

import java.io.*;
import java.net.*;
import javax.servlet.*;
import javax.servlet.http.*;
import com.google.gson.*;

/**
 * Servlet implementation class Convert
 */
public class Convert extends HttpServlet {
    private static final long serialVersionUID = 1L;

    class Recv {
        private String lhs;
        private String rhs;
        private String error;
        private String icc;

        public Recv() {
        }

        public String getLhs() {
            return lhs;
        }

        public String getRhs() {
            return rhs;
        }

        public String getError() {
            return error;
        }
    }

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        String amount = req.getParameter("amount");
        String curTo = req.getParameter("to");
        String curFrom = req.getParameter("from");
        HttpSession session = req.getSession();
        resp.setContentType("text/html;charset=UTF-8");
        PrintWriter out = resp.getWriter();

        // Validate input parameters
        if (amount == null || curTo == null || curFrom == null || amount.isEmpty() || curTo.isEmpty() || curFrom.isEmpty()) {
            out.println("Invalid input parameters");
            return;
        }

        try {
            String query = "http://www.google.com/ig/calculator?hl=en&q=" + amount + curFrom + "=?" + curTo;
            URL url = new URL(query);
            InputStreamReader stream = new InputStreamReader(url.openStream());
            BufferedReader in = new BufferedReader(stream);
            StringBuilder str = new StringBuilder();
            String temp;

            while ((temp = in.readLine()) != null) {
                str.append(temp);
            }

            in.close();

            // Parse the result which is in JSON format
            Gson gson = new Gson();
            Recv st = gson.fromJson(str.toString(), Recv.class);

            if (st.getError() != null && !st.getError().isEmpty()) {
                out.println("Error: " + st.getError());
                return;
            }

            String rhs = st.getRhs();
            if (rhs != null) {
                rhs = rhs.replaceAll("ï¿½", "");
                // Print the result
                out.println("Converted amount: " + rhs);
            } else {
                out.println("Conversion failed. Please try again.");
            }
        } catch (NumberFormatException e) {
            out.println("The given amount is not a valid number");
        } catch (MalformedURLException e) {
            out.println("Malformed URL: " + e.getMessage());
        } catch (IOException e) {
            out.println("Error reading from the URL: " + e.getMessage());
        } finally {
            out.close();
        }
    }

    /**
     * Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Currency conversion servlet";
    }
}
