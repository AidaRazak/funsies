import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Main {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    List<String> history = new ArrayList<>();
    boolean continueCalculation = true;

    while (continueCalculation) {
      char operator;
      Double number1 = null, number2 = null, result = null;

      // Ask users to enter operator
      while (true) {
        System.out.println("Choose an operator: +, -, *, /, %, ^, h (history), c (clear history), q (quit)");
        String opInput = input.next().toLowerCase();
        
        if (opInput.equals("h")) {
          displayHistory(history);
          continue;
        } else if (opInput.equals("c")) {
          history.clear();
          System.out.println("History cleared.");
          continue;
        } else if (opInput.equals("q")) {
          continueCalculation = false;
          break;
        } else if (opInput.length() == 1) {
          operator = opInput.charAt(0);
          if (operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%' || operator == '^') {
            break;
          } else {
            System.out.println("Invalid operator! Please try again.");
          }
        } else {
          System.out.println("Invalid input! Please try again.");
        }
      }
      
      if (!continueCalculation) {
        break;
      }

      // Ask users to enter numbers
      number1 = getValidNumber(input, "Enter first number");
      number2 = getValidNumber(input, "Enter second number");

      // Perform calculation based on the operator
      result = calculateResult(operator, number1, number2);

      // Display the result if valid
      if (result != null) {
        String calculation = number1 + " " + operator + " " + number2 + " = " + result;
        System.out.println(calculation);
        history.add(calculation);
      }

      // Ask if user wants to perform another calculation
      System.out.println("Do you want to perform another calculation? (yes/no)");
      String userResponse = input.next().toLowerCase();
      if (!userResponse.equals("yes")) {
        continueCalculation = false;
      }
    }

    input.close();
    System.out.println("Calculator closed.");
  }

  // Method to display calculation history
  public static void displayHistory(List<String> history) {
    if (history.isEmpty()) {
      System.out.println("No calculations yet.");
    } else {
      System.out.println("Calculation History:");
      for (String record : history) {
        System.out.println(record);
      }
    }
  }

  // Method to get a valid number from the user
  public static Double getValidNumber(Scanner input, String prompt) {
    Double number = null;
    System.out.println(prompt);
    while (true) {
      if (input.hasNextDouble()) {
        number = input.nextDouble();
        break;
      } else {
        System.out.println("Invalid input. Please enter a valid number.");
        input.next();
      }
    }
    return number;
  }

  // Method to perform calculation
  public static Double calculateResult(char operator, Double number1, Double number2) {
    Double result = null;
    switch (operator) {
      case '+':
        result = number1 + number2;
        break;
      case '-':
        result = number1 - number2;
        break;
      case '*':
        result = number1 * number2;
        break;
      case '/':
        if (number2 == 0) {
          System.out.println("Error! Division by zero is not allowed.");
        } else {
          result = number1 / number2;
        }
        break;
      case '%':
        if (number2 == 0) {
          System.out.println("Error! Division by zero is not allowed.");
        } else {
          result = number1 % number2;
        }
        break;
      case '^':
        result = Math.pow(number1, number2);
        break;
    }
    return result;
  }
}
